{
    "fields": [
        "AllianceColor INTEGER DEFAULT 0",
        "StartPosition INTEGER DEFAULT 0",
        "StartGamePiece TEXT DEFAULT ''",
        "StartConfig TEXT DEFAULT'",
        "Mobility INTEGER DEFAULT 0",
        "AutoHybridConeSuccess INTEGER DEFAULT 0",
        "AutoHybridConeFail INTEGER DEFAULT 0",
        "AutoHybridCubeSuccess INTEGER DEFAULT 0",
        "AutoHybridCubeFail INTEGER DEFAULT 0",
        "AutoMidConeSuccess INTEGER DEFAULT 0",
        "AutoMidConeFail INTEGER DEFAULT 0",
        "AutoMidCubeSuccess INTEGER DEFAULT 0",
        "AutoMidCubeFail INTEGER DEFAULT 0",
        "AutoHighConeSuccess INTEGER DEFAULT 0",
        "AutoHighConeFail INTEGER DEFAULT 0",
        "AutoHighCubeSuccess INTEGER DEFAULT 0",
        "AutoHighCubeFail INTEGER DEFAULT 0",
        "TeleHybridConeSuccess INTEGER DEFAULT 0",
        "TeleHybridConeFail INTEGER DEFAULT 0",
        "TeleHybridCubeSuccess INTEGER DEFAULT 0",
        "TeleHybridCubeFail INTEGER DEFAULT 0",
        "TeleMidConeSuccess INTEGER DEFAULT 0",
        "TeleMidConeFail INTEGER DEFAULT 0",
        "TeleMidCubeSuccess INTEGER DEFAULT 0",
        "TeleMidCubeFail INTEGER DEFAULT 0",
        "TeleHighConeSuccess INTEGER DEFAULT 0",
        "TeleHighConeFail INTEGER DEFAULT 0",
        "TeleHighCubeSuccess INTEGER DEFAULT 0",
        "TeleHighCubeFail INTEGER DEFAULT 0",
        "AutoDock TEXT DEFAULT ''",
        "AutoEngage INTEGER DEFAULT 0",
        "TeleDock TEXT DEFAULT ''",
        "TeleEngage TEXT DEFAULT ''",
        "AutoDockTraverse INTEGER DEFAULT 0",
        "TeleDockTraverse INTEGER DEFAULT 0",
        "AutoFloorConeCollect INTEGER DEFAULT 0",
        "AutoFloorCubeCollect INTEGER DEFAULT 0",
        "TeleFloorConeCollect INTEGER DEFAULT 0",
        "TeleFloorCubeCollect INTEGER DEFAULT 0",
        "TeleSingleConeCollect INTEGER DEFAULT 0",
        "TeleSingleCubeCollect INTEGER DEFAULT 0",
        "TeleDoubleConeCollect INTEGER DEFAULT 0",
        "TeleDoubleCubeCollect INTEGER DEFAULT 0",
        "AutoConeDrop INTEGER DEFAULT 0",
        "AutoCubeDrop INTEGER DEFAULT 0",
        "TeleConeDrop INTEGER DEFAULT 0",
        "TeleCubeDrop INTEGER DEFAULT 0",
        "CoopertitionBonus INTEGER DEFAULT 0",
        "LinkRP INTEGER DEFAULT 0",
        "PlayingDefenseDuration INTEGER DEFAULT 0",
        "UnderDefenseDuration INTEGER DEFAULT 0",
        "Park INTEGER DEFAULT 0",
        "Points INTEGER DEFAULT 0",
        "Penalties INTEGER DEFAULT 0",
        "Disabled INTEGER DEFAULT 0",
        "DriverRating INTEGER DEFAULT 0",
        "CubeIntakeRating INTEGER DEFAULT 0",
        "ConeIntakeRating INTEGER DEFAULT 0",
        "DefenseRating INTEGER DEFAULT 0",
        "UnderDefenseRating INTEGER DEFAULT 0",
        "Comment TEXT DEFAULT ''"
    ],
    "pitFields": [
        "DriveTrain TEXT DEFAULT ''",
        "Width INTEGER DEFAULT 0",
        "Length INTEGER DEFAULT 0",
        "CanMobile INTEGER DEFAULT 0",
        "MultipleDriveTeams TEXT DEFAULT 0",
        "Comment TEXT DEFAULT ''",
        "Image TEXT DEFAULT ''",
        "UsesFalcon500s INTEGER DEFAULT 0",
        "InspectedFalcon500s INTEGER DEFAULT 0",
        "BuildQualityRating INTEGER DEFAULT 0",
        "PreferedPickup TEXT DEFAULT ''"
    ],
    "forceClassic": {
        "auto": false,
        "teleop": false,
        "endgame": true
    },
    "modeAliases": {
        "endgame": [
            "P",
            "Post",
            "Post Game"
        ]
    },
    "hideClassic": true,
    "uploadChecks": {
        "pit": [
            {
                "field": "DriveTrain",
                "operator": "!=",
                "value": "",
                "message": "Please enter a drive train.",
                "binding": true
            },
            {
                "field": "Width",
                "operator": ">=",
                "value": 0,
                "message": "Are you sure this width is correct?",
                "binding": true
            },
            {
                "field": "Width",
                "operator": "<",
                "value": 50,
                "message": "Are you sure this width is correct?",
                "binding": false
            },
            {
                "field": "Length",
                "operator": ">=",
                "value": 0,
                "message": "Are you sure this length is correct?",
                "binding": true
            },
            {
                "field": "Length",
                "operator": "<",
                "value": 50,
                "message": "Are you sure this length is correct?",
                "binding": false
            },
            {
                "script": "return (((data.Length * 2) + (data.Width * 2)) < 120)",
                "message": "Their length and width exceed frame perimeter",
                "binding": false
            },
            {
                "script": "return ((data.UsesFalcon500s - data.InspectedFalcon500s >= 0))",
                "message": "They do not have Falcon 500s but they inspected them. Why???",
                "binding": false
            },
            {
                "field": "BuildQuality",
                "operator": ">",
                "value": 0,
                "message": "Please enter a build quality rating",
                "binding": true
            }
        ],
        "match": [
            {
                "field": "Comment",
                "operator": "!=",
                "value": "",
                "message": "You must enter a comment.",
                "binding": true
            },
            {
                "script": "return (data.Comment.length < 200) || (data.Comment.length >= 500)",
                "message": "Your comment is pretty long. Please try to shorten it. Continue?",
                "binding": false
            },
            {
                "script": "return (data.Comment.length < 500)",
                "message": "Your comment is very long. Please shorten it.",
                "binding": true
            },
            {
                "script": "return (data.Comment.length > 15) || (data.Comment.length == 0)",
                "message": "Your comment is very short. Would you still like to continue?",
                "binding": false
            },
            {
                "field": "Points",
                "type": "integer",
                "operator": ">=",
                "value": 0,
                "message": "Are you sure the final score is correct?",
                "binding": true
            },
            {
                "field": "Points",
                "operator": "<",
                "value": 300,
                "message": "Are you sure the final score is correct?",
                "binding": false
            },
            {
                "script": "return data.Points % 1 == 0",
                "message": "Points should be a whole number!",
                "binding": true
            },
            {
                "field": "Penalties",
                "operator": ">=",
                "value": 0,
                "message": "Are you sure the penalties are correct?",
                "binding": true
            },
            {
                "field": "Penalties",
                "operator": "<",
                "value": 10,
                "message": "Are you sure the final penalties are correct?",
                "binding": false
            },
            {
                "script": "return data.Penalties % 1 == 0",
                "message": "Penalties should be a whole number!",
                "binding": true
            },
            {
                "script": "return data.AutoUpperSuccess + data.AutoUpperFailures + data.AutoLowerSuccess + data.AutoLowerFailures < 7",
                "message": "They phyically cannot score that much in Auto",
                "binding": false
            },
            {
                "script": "return data.AutoConeCollect + data.AutoCubeCollect < 4",
                "message": "They phyically cannot collect that much in Auto",
                "binding": false
            },
            {
                "field": "StartPosition",
                "operator": "!=",
                "value": "",
                "message": "Please enter a starting position",
                "binding": true
            }
        ]
    },
    "helpText": {
        "endgame": "<style>table {border-collapse: collapse; margin-left: 5px; margin-right: 5px;} td {border: 1px solid black; padding: 5px;} li.small {font-size: 16px;} .emoji {font-size: 24px;}</style><h2>Disabled / Fell</h2>Mark if the robot is <b>nonfunctional</b> for more than half the match. This includes disconnects, being disabled by the FMS, or falling over.<ul><li>Robot is disconnected when match starts, begins moving 10 seconds later - <i>do not mark as disabled</i></li><li>Robot is disabled by the FMS shortly after auto and doesn't move for the remainder of the match - <i>mark as disabled</i></li><li>Robot falls during the match and is quickly righted by an alliance partner - <i>do not mark as fallen</i></li></ul></div><h2>Driver Rating</h2><table><tr><td>NA</td><td>The robot did not move during teleop.</td></tr><tr><td>&#x2B50</td><td>Terrible - majority of time spent maneuvering.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Often has difficulty moving around / lining up for objectives.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Pretty good - occasionally has trouble maneuvering.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Rarely has difficulty moving around / lining up for objectives.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Incredibly efficient - moves around easily with no difficulty.</td></tr></table><h2>Intake Rating</h2><table><tr><td>NA</td><td>The robot did not intake cone/cube from the floor.</td></tr><tr><td>&#x2B50</td><td>Tried to intake cone/cube but usually failed.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Had difficulty with intake or intakes slowly.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Pretty fast and reliable - sometimes fails to intake.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Quite fast and reliable - regularly intakes with no difficulty.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Cone/cube magnet - no effort required.</td></tr></table><h2>Playing Defense Rating</h2><table><tr><td>NA</td><td>Did not go near any other robots.</td></tr><tr><td>&#x2B50</td><td>Came near another robot, and maybe got in their way once.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Actively tried to play defense, however it was incredibly inefficient.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Played halfway decent defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Slowed down the scoring robot a significant amount.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Absolutely shut down the offensive robot.</td></tr></table><h2>Under Defense Rating</h2><table><tr><td>NA</td><td>Other robots did not go near them.</td></tr><tr><td>&#x2B50</td><td>Absolutely shut down by the defensive robot.</td></tr><tr><td>&#x2B50&#x2B50</td><td>Slowed down by the defense robot a significant amount.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50</td><td>Somewhat affected by defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Minimally affected by defense.</td></tr><tr><td>&#x2B50&#x2B50&#x2B50&#x2B50&#x2B50</td><td>Defense? What’s defense?</td></tr></table><h2>Comments</h2><b>There is always something to comment on.</b><br>Goes directly to the coach's sheet - what would you tell the drive team?<ul><li>Observations about mechanisms - looks unstable, super well built, etc.<ul><li class=\"small\">\"Their climber is a little wobbly and tends to slide around on the generator switch.\"</li><li class=\"small\">\"Cargo regularly gets stuck in the feeding mechanism.\"</li></ul></li><li>Unique strategies / good strategies / bad strategies<ul><li class=\"small\">\"Chose to continue shooting in upper hub rather than climbing.\"</li><li class=\"small\">\"Chose to shoot from a difficult part of the field.\"</li></ul></li><li>Interesting mechanisms<ul><li class=\"small\">\"They have a system for passing cargo to an alliance partner during auto.\"</li></ul></li><li>Potential weaknesses<ul><li class=\"small\">\"Their vision system is easily interrupted by a defensive robot.\"</li><li class=\"small\">\"They can be pushed from the side easily but not head on.\"</li></ul></li><li>Out-of-character behavior<ul><li class=\"small\">\"Their driving is much worse than usual - maybe a new drive team.\"</li><li class=\"small\">\"They didn't shoot at all - shooter potentially broken.\"</li></ul></li><li>Fouls / lack of competence<ul><li class=\"small\">\"They got a series of fouls while doing defense, then their bumpers fell off and the battery was dragging behind them\" (If this happens, <i>please</i> tell us <span class=\"emoji\">&#x1F609</span>)</li></ul></li><li>Anything else you observe!</li></ul><div style=\"font-weight: bold; font-size: 22px;\">Bad comments:</div><ul><li>\"They were bad.\"<ul><li class=\"small\">Elaborate - what made them bad? Bad driving? Unreliable mechanisms? Bad strategizing?</li></ul></li><li>\"I couldn't see the field well.\"<ul><li class=\"small\">GET UP AND MOVE</li></ul></li><li>\"Slow.\"<ul><li class=\"small\">Elaborate - in what way were they slow? Slow driving? Slow intake? Defense?</li></ul></li><li>\"Good driving.\"<ul><li class=\"small\">Give them a good driver rating! If you choose to comment on this, elaborate with more specifics</li></ul></li><li>\"Tie.\"<ul><li class=\"small\">We already know this from the score</li></ul></li><li>\"Piece fell off robot.\"<ul><li class=\"small\">What piece fell off the robot? If you don't know specifically, describe it</li></ul></li><li>\"I entered this comment so it was long enough.\"</li><li>\"fjkdshfjkhdskjfhdsjkhj\"<ul><li class=\"small\">This is not an acceptable comment!<span class=\"emoji\">&#x1F621</span></li></ul></li></ul><h2>Final Score</h2>Wait for the <b>post-animation score</b>, after the match winner is officially announced, rather than the automated score immediately after the match completes.",
        "pit": "Try to find a team member not actively engaged in pit work, but feel free to interrupt if necessary (just be polite about it). Remember that you are representing our team, so be gracious and professional.<h2>Drive Train Type</h2>Include # of wheels if applicable. Common drive train types (though many more exist):<ul><li><u>Standard Tank</u> - 4-8 wheels, internal to superstructure</li><li><u>West Coast Drive</u> - similar to above, but wheels on outside of superstructure</li><li><u>Literal Tank</u> - standard tank but with tracks</li><li><u>Mecanum</u> - four mecanum roller wheels allowing omnidirectional movement</li><li><u>Swerve</u> - omnidirectional drive, but wildly complicated</li><li><u>H-Drive</u> - five omniwheels in an \"H\" shape</li></ul><h2>Top Speed</h2>Specify in feet per second. Leave blank if unknown.<h2>BuildQuality Rating</h2> Give your best judgement on how well-built the robot.<h2>Multiple Drive Teams?</h2>Do they use a single drive team throughout the entire event, or does it change between matches?<h2>Comment</h2>What else was mentioned that is relevant to the drive team?<ul><li>Unique / interesting mechanisms</li><li>Focus on particular game objectives</li><li>Potential robot problems, broken mechanisms, etc.</li><li>Any other information you can provide!</li></ul><h2>Robot Image</h2><ul><li>Try to get a diagonal angle (so that the front and side are visible)</li><li>Avoid people / objects blocking parts of the robot (if possible)</li><li>Make sure the entire robot is in frame</li></ul>"
    },
    "classic": {
        "pit": [
            {
                "type": "checkbox",
                "field": "UsesFalcon500s",
                "label": "F500 S2021?"
            },
            {
                "type": "checkbox",
                "field": "InspectedFalcon500s",
                "label": "Inspected F500?"
            },
            {
                "type": "break"
            },
            {
                "type": "text",
                "field": "DriveTrain",
                "label": "Drive Train Type"
            },
            {
                "type": "number",
                "field": "Width",
                "label": "Width (in)"
            },
            {
                "type": "number",
                "field": "Length",
                "label": "Length (in)"
            },
            {
                "type": "checkbox",
                "field": "CanMobile",
                "label": "Can Mobile?"
            },
            {
                "type": "text",
                "field": "MultipleDriveTeams",
                "label": "Multiple Drive Teams?"
            },
            {
                "type": "text",
                "field": "PreferredPickup",
                "label": "Preferred Pickup?"
            },
            {
                "type": "chooser",
                "field": "BuildQuality",
                "label": "Build Quality?",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "break"
            },
            {
                "type": "text",
                "field": "Comment",
                "label": "Comment"
            },
            {
                "type": "image",
                "field": "Image",
                "label": "Robot Image"
            },
            {
                "type": "uploadButton"
            }
        ],
        "auto": [],
        "teleop": [],
        "endgame": [
            {
                "type": "checkbox",
                "field": "Disabled",
                "label": "Disabled/Fell?"
            },
            {
                "type": "break"
            },
            {
                "type": "chooser",
                "field": "DriverRating",
                "label": "Driver Rating",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "chooser",
                "field": "ConeIntakeRating",
                "label": "Cone Intake Rating",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "chooser",
                "field": "CubeIntakeRating",
                "label": "Cube Intake Rating",
                "options": {
                    "NA": 0,
                    "\u2B50": 1,
                    "\u2B50\u2B50": 2,
                    "\u2B50\u2B50\u2B50": 3,
                    "\u2B50\u2B50\u2B50\u2B50": 4,
                    "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                }
            },
            {
                "type": "group",
                "label": "Playing Defense",
                "unit1": {
                    "type": "chooser",
                    "field": "DefenseRating",
                    "label": "Rating",
                    "options": {
                        "NA": 0,
                        "\u2B50": 1,
                        "\u2B50\u2B50": 2,
                        "\u2B50\u2B50\u2B50": 3,
                        "\u2B50\u2B50\u2B50\u2B50": 4,
                        "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                    }
                },
                "unit2": {
                    "type": "chooser",
                    "field": "PlayingDefenseDuration",
                    "label": "Duration",
                    "options": {
                        "None": 0,
                        "Little (1-15s)": 1,
                        "Some (16-60s)": 2,
                        "Most (60-90)": 3,
                        "All (90+)": 4
                    }
                }
            },
            {
                "type": "group",
                "label": "Under Defense",
                "unit1": {
                    "type": "chooser",
                    "field": "UnderDefenseRating",
                    "label": "Rating",
                    "options": {
                        "NA": 0,
                        "\u2B50": 1,
                        "\u2B50\u2B50": 2,
                        "\u2B50\u2B50\u2B50": 3,
                        "\u2B50\u2B50\u2B50\u2B50": 4,
                        "\u2B50\u2B50\u2B50\u2B50\u2B50": 5
                    }
                },
                "unit2": {
                    "type": "chooser",
                    "field": "UnderDefenseDuration",
                    "label": "Duration",
                    "options": {
                        "None": 0,
                        "Little (1-15s)": 1,
                        "Some (16-60s)": 2,
                        "Most (60-90s)": 3,
                        "All (90+)": 4
                    }
                }
            },
            {
                "type": "checkbox",
                "field": "LinkRP",
                "label": "Link RP"
            },
            {
                "type": "checkbox",
                "field": "CoopertitionBonus",
                "label": "Coopertiton Bonus"
            },
            {
                "type": "break"
            },
            {
                "type": "text",
                "field": "Comment",
                "label": "Comment"
            },
            {
                "type": "number",
                "field": "Points",
                "label": "Final Score"
            },
            {
                "type": "number",
                "field": "Penalties",
                "label": "Penalties"
            },
            {
                "type": "uploadButton"
            }
        ]
    }
}